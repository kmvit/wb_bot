"""–ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ —Å–ª–æ—Ç–æ–≤"""

from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from datetime import datetime
import calendar


def create_coefficient_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(
                text="üü¢ –¢–æ–ª—å–∫–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ (0)", callback_data="coeff_0"),
            InlineKeyboardButton(text="üü° –î–æ x1 (0-1)", callback_data="coeff_1")
        ],
        [
            InlineKeyboardButton(text="üü° –î–æ x2 (0-2)",
                                 callback_data="coeff_2"),
            InlineKeyboardButton(text="üü° –î–æ x3 (0-3)", callback_data="coeff_3")
        ],
        [
            InlineKeyboardButton(text="üü° –î–æ x4 (0-4)",
                                 callback_data="coeff_4"),
            InlineKeyboardButton(text="üü° –î–æ x5 (0-5)", callback_data="coeff_5")
        ],
        [
            InlineKeyboardButton(text="üü† –î–æ x6 (0-6)",
                                 callback_data="coeff_6"),
            InlineKeyboardButton(text="üü† –î–æ x7 (0-7)", callback_data="coeff_7")
        ],
        [
            InlineKeyboardButton(text="üü† –î–æ x8 (0-8)",
                                 callback_data="coeff_8"),
            InlineKeyboardButton(text="üü† –î–æ x9 (0-9)", callback_data="coeff_9")
        ],
        [
            InlineKeyboardButton(text="üü† –î–æ x10 (0-10)",
                                 callback_data="coeff_10"),
            InlineKeyboardButton(text="üî¥ –î–æ x20 (0-20)",
                                 callback_data="coeff_20")
        ],
        [InlineKeyboardButton(text="üåü –õ—é–±–æ–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç",
                              callback_data="coeff_any")],
        [InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_monitoring")]
    ])


def create_box_type_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —É–ø–∞–∫–æ–≤–∫–∏"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üì¶ –ö–æ—Ä–æ–±–∞", callback_data="box_type_2")],
        [InlineKeyboardButton(text="üõí –ú–æ–Ω–æ–ø–∞–ª–ª–µ—Ç—ã",
                              callback_data="box_type_5")],
        [InlineKeyboardButton(text="üöõ –°—É–ø–µ—Ä—Å–µ–π—Ñ", callback_data="box_type_6")],
        [InlineKeyboardButton(text="üåü –õ—é–±–æ–π —Ç–∏–ø",
                              callback_data="box_type_any")],
        [InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_coefficient")],
        [InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_monitoring")]
    ])


def create_logistics_shoulder_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–ª–µ—á–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üöö 0 –¥–Ω–µ–π (–≥–æ—Ç–æ–≤ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ)", callback_data="logistics_0")],
        [InlineKeyboardButton(text="üöö 1 –¥–µ–Ω—å", callback_data="logistics_1")],
        [InlineKeyboardButton(text="üöö 2 –¥–Ω—è", callback_data="logistics_2")],
        [InlineKeyboardButton(text="üöö 3 –¥–Ω—è", callback_data="logistics_3")],
        [InlineKeyboardButton(text="üöö 4 –¥–Ω—è", callback_data="logistics_4")],
        [InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_box_type")],
        [InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_monitoring")]
    ])


def create_date_range_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìÖ –ë–ª–∏–∂–∞–π—à–∏–µ 7 –¥–Ω–µ–π",
                              callback_data="date_range_week")],
        [InlineKeyboardButton(text="üìÖ –ë–ª–∏–∂–∞–π—à–∏–µ 14 –¥–Ω–µ–π",
                              callback_data="date_range_2weeks")],
        [InlineKeyboardButton(text="üìÖ –ë–ª–∏–∂–∞–π—à–∏–π –º–µ—Å—è—Ü",
                              callback_data="date_range_month")],
        [InlineKeyboardButton(text="üìù –£–∫–∞–∑–∞—Ç—å —Å–≤–æ–∏ –¥–∞—Ç—ã",
                              callback_data="date_range_custom")],
        [InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_logistics")],
        [InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_monitoring")]
    ])


def create_calendar(year: int, month: int, selected_dates=None) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã"""
    if selected_dates is None:
        selected_dates = []

    # –ü–æ–ª—É—á–∞–µ–º –∫–∞–ª–µ–Ω–¥–∞—Ä—å –º–µ—Å—è—Ü–∞
    cal = calendar.monthcalendar(year, month)

    # –ù–∞–∑–≤–∞–Ω–∏—è –º–µ—Å—è—Ü–µ–≤
    month_names = [
        "–Ø–Ω–≤–∞—Ä—å", "–§–µ–≤—Ä–∞–ª—å", "–ú–∞—Ä—Ç", "–ê–ø—Ä–µ–ª—å", "–ú–∞–π", "–ò—é–Ω—å",
        "–ò—é–ª—å", "–ê–≤–≥—É—Å—Ç", "–°–µ–Ω—Ç—è–±—Ä—å", "–û–∫—Ç—è–±—Ä—å", "–ù–æ—è–±—Ä—å", "–î–µ–∫–∞–±—Ä—å"
    ]

    keyboard = []

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –º–µ—Å—è—Ü–µ–º –∏ –≥–æ–¥–æ–º
    keyboard.append([
        InlineKeyboardButton(
            text="‚óÄÔ∏è", callback_data=f"cal_prev_{year}_{month}"),
        InlineKeyboardButton(
            text=f"{month_names[month-1]} {year}", callback_data="cal_ignore"),
        InlineKeyboardButton(
            text="‚ñ∂Ô∏è", callback_data=f"cal_next_{year}_{month}")
    ])

    # –î–Ω–∏ –Ω–µ–¥–µ–ª–∏
    keyboard.append([
        InlineKeyboardButton(text="–ü–Ω", callback_data="cal_ignore"),
        InlineKeyboardButton(text="–í—Ç", callback_data="cal_ignore"),
        InlineKeyboardButton(text="–°—Ä", callback_data="cal_ignore"),
        InlineKeyboardButton(text="–ß—Ç", callback_data="cal_ignore"),
        InlineKeyboardButton(text="–ü—Ç", callback_data="cal_ignore"),
        InlineKeyboardButton(text="–°–±", callback_data="cal_ignore"),
        InlineKeyboardButton(text="–í—Å", callback_data="cal_ignore")
    ])

    # –î–Ω–∏ –º–µ—Å—è—Ü–∞
    today = datetime.now().date()
    for week in cal:
        row = []
        for day in week:
            if day == 0:
                row.append(InlineKeyboardButton(
                    text=" ", callback_data="cal_ignore"))
            else:
                date = datetime(year, month, day).date()

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –≤ –ø—Ä–æ—à–ª–æ–º –ª–∏ –¥–∞—Ç–∞
                if date < today:
                    row.append(InlineKeyboardButton(
                        text="‚ùå", callback_data="cal_ignore"))
                else:
                    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –≤—ã–±—Ä–∞–Ω–∞ –ª–∏ –¥–∞—Ç–∞
                    if date in selected_dates:
                        text = f"‚úÖ{day}"
                    else:
                        text = str(day)

                    row.append(InlineKeyboardButton(
                        text=text,
                        callback_data=f"cal_select_{year}_{month}_{day}"
                    ))
        keyboard.append(row)

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def create_warehouse_keyboard(warehouses: list, selected_warehouses: list, page: int = 0) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –≤—ã–±–æ—Ä–∞ —Å–∫–ª–∞–¥–æ–≤"""
    warehouse_buttons = []

    # –ü–∞–≥–∏–Ω–∞—Ü–∏—è: 10 —Å–∫–ª–∞–¥–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
    warehouses_per_page = 10
    start_idx = page * warehouses_per_page
    end_idx = start_idx + warehouses_per_page
    current_warehouses = warehouses[start_idx:end_idx]

    total_pages = (len(warehouses) - 1) // warehouses_per_page + 1

    for warehouse in current_warehouses:
        # API –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç ID —Å –±–æ–ª—å—à–æ–π –±—É–∫–≤—ã –∏–ª–∏ –º–∞–ª–µ–Ω—å–∫–æ–π –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –º–µ—Ç–æ–¥–∞
        warehouse_id = warehouse.get('ID') or warehouse.get('id')
        warehouse_name = warehouse.get('name', f'–°–∫–ª–∞–¥ {warehouse_id}')

        # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å–∫–ª–∞–¥—ã –±–µ–∑ –≤–∞–ª–∏–¥–Ω–æ–≥–æ ID
        if warehouse_id is None:
            continue

        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —á–µ–∫–±–æ–∫—Å (–≤—ã–±—Ä–∞–Ω –∏–ª–∏ –Ω–µ—Ç)
        checkbox = "‚òëÔ∏è" if warehouse_id in selected_warehouses else "‚òê"

        warehouse_buttons.append([
            InlineKeyboardButton(
                text=f"{checkbox} {warehouse_name}",
                callback_data=f"warehouse_{warehouse_id}"
            )
        ])

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
    pagination_buttons = []
    if total_pages > 1:
        nav_buttons = []

        # –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        if page > 0:
            nav_buttons.append(
                InlineKeyboardButton(
                    text="‚¨ÖÔ∏è –ü—Ä–µ–¥.", callback_data=f"warehouse_page_{page-1}")
            )

        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
        nav_buttons.append(
            InlineKeyboardButton(
                text=f"{page + 1}/{total_pages}", callback_data="current_page")
        )

        # –ö–Ω–æ–ø–∫–∞ "–í–ø–µ—Ä–µ–¥" –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
        if page < total_pages - 1:
            nav_buttons.append(
                InlineKeyboardButton(
                    text="–°–ª–µ–¥. ‚û°Ô∏è", callback_data=f"warehouse_page_{page+1}")
            )

        pagination_buttons.append(nav_buttons)

    # –î–æ–±–∞–≤–ª—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    warehouse_buttons.extend(pagination_buttons)
    warehouse_buttons.extend([
        [InlineKeyboardButton(text="‚úÖ –í—ã–±—Ä–∞—Ç—å –≤—Å–µ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ",
                              callback_data=f"select_page_warehouses_{page}")],
        [InlineKeyboardButton(text="üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥",
                              callback_data="continue_to_options")],
        [InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_to_date_selection")],
        [InlineKeyboardButton(
            text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_monitoring")]
    ])

    return InlineKeyboardMarkup(inline_keyboard=warehouse_buttons)


def create_edit_monitoring_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã",
                              callback_data="edit_coefficient")],
        [InlineKeyboardButton(text="üì¶ –¢–∏–ø —É–ø–∞–∫–æ–≤–∫–∏",
                              callback_data="edit_box_type")],
        [InlineKeyboardButton(text="üöö –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ –ø–ª–µ—á–æ",
                              callback_data="edit_logistics_shoulder")],
        [InlineKeyboardButton(text="üìÖ –ü–µ—Ä–∏–æ–¥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞",
                              callback_data="edit_date_range")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="my_monitorings")]
    ])


def create_edit_coefficient_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç–æ–≤"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [
            InlineKeyboardButton(text="üü¢ –¢–æ–ª—å–∫–æ –±–µ—Å–ø–ª–∞—Ç–Ω—ã–µ (0)",
                                 callback_data="edit_coeff_0_0"),
            InlineKeyboardButton(text="üü° –î–æ x1 (0-1)",
                                 callback_data="edit_coeff_0_1")
        ],
        [
            InlineKeyboardButton(text="üü° –î–æ x2 (0-2)",
                                 callback_data="edit_coeff_0_2"),
            InlineKeyboardButton(text="üü° –î–æ x3 (0-3)",
                                 callback_data="edit_coeff_0_3")
        ],
        [
            InlineKeyboardButton(text="üü° –î–æ x4 (0-4)",
                                 callback_data="edit_coeff_0_4"),
            InlineKeyboardButton(text="üü° –î–æ x5 (0-5)",
                                 callback_data="edit_coeff_0_5")
        ],
        [
            InlineKeyboardButton(text="üü† –î–æ x6 (0-6)",
                                 callback_data="edit_coeff_0_6"),
            InlineKeyboardButton(text="üü† –î–æ x7 (0-7)",
                                 callback_data="edit_coeff_0_7")
        ],
        [
            InlineKeyboardButton(text="üü† –î–æ x8 (0-8)",
                                 callback_data="edit_coeff_0_8"),
            InlineKeyboardButton(text="üü† –î–æ x9 (0-9)",
                                 callback_data="edit_coeff_0_9")
        ],
        [
            InlineKeyboardButton(text="üü† –î–æ x10 (0-10)",
                                 callback_data="edit_coeff_0_10"),
            InlineKeyboardButton(text="üî¥ –î–æ x20 (0-20)",
                                 callback_data="edit_coeff_0_20")
        ],
        [InlineKeyboardButton(text="üåü –õ—é–±–æ–π –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç",
                              callback_data="edit_coeff_0_100")],
    ])


def create_edit_box_type_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–∏–ø–∞ —É–ø–∞–∫–æ–≤–∫–∏"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="üì¶ –ö–æ—Ä–æ–±–∞", callback_data="edit_box_type_2")],
        [InlineKeyboardButton(text="üõí –ú–æ–Ω–æ–ø–∞–ª–ª–µ—Ç—ã",
                              callback_data="edit_box_type_5")],
        [InlineKeyboardButton(text="üöõ –°—É–ø–µ—Ä—Å–µ–π—Ñ",
                              callback_data="edit_box_type_6")],
        [InlineKeyboardButton(text="üåü –õ—é–±–æ–π —Ç–∏–ø",
                              callback_data="edit_box_type_any")],
        [InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="edit_monitoring_back")]
    ])


def create_edit_logistics_shoulder_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ª–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –ø–ª–µ—á–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(
            text="1 –¥–µ–Ω—å", callback_data="edit_logistics_1")],
        [InlineKeyboardButton(text="2 –¥–Ω—è", callback_data="edit_logistics_2")],
        [InlineKeyboardButton(text="3 –¥–Ω—è", callback_data="edit_logistics_3")],
        [InlineKeyboardButton(text="4 –¥–Ω—è", callback_data="edit_logistics_4")]
    ])


def create_edit_date_range_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–µ—Ä–∏–æ–¥–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìÖ –í—ã–±—Ä–∞—Ç—å –¥–∞—Ç—ã –≤—Ä—É—á–Ω—É—é",
                              callback_data="edit_select_dates")],
        [InlineKeyboardButton(text="üìä –ë—ã—Å—Ç—Ä—ã–π –≤—ã–±–æ—Ä",
                              callback_data="edit_quick_period")],
        [InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="edit_monitoring_back")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="my_monitorings")]
    ])


def create_edit_quick_period_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±—ã—Å—Ç—Ä–æ–≥–æ –≤—ã–±–æ—Ä–∞ –ø–µ—Ä–∏–æ–¥–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìÖ 7 –¥–Ω–µ–π", callback_data="edit_period_7")],
        [InlineKeyboardButton(
            text="üìÖ 14 –¥–Ω–µ–π", callback_data="edit_period_14")],
        [InlineKeyboardButton(
            text="üìÖ 30 –¥–Ω–µ–π", callback_data="edit_period_30")],
        [InlineKeyboardButton(
            text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="edit_date_range")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="my_monitorings")]
    ])


def create_edit_confirm_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –ö–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç—ã",
                              callback_data="edit_coefficient")],
        [InlineKeyboardButton(text="üì¶ –¢–∏–ø —É–ø–∞–∫–æ–≤–∫–∏",
                              callback_data="edit_box_type")],
        [InlineKeyboardButton(text="üöö –õ–æ–≥–∏—Å—Ç–∏—á–µ—Å–∫–æ–µ –ø–ª–µ—á–æ",
                              callback_data="edit_logistics_shoulder")],
        [InlineKeyboardButton(text="üìÖ –ü–µ—Ä–∏–æ–¥ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞",
                              callback_data="edit_date_range")],
        [InlineKeyboardButton(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è",
                              callback_data="confirm_edit")],
        [InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∞", callback_data="my_monitorings")]
    ])


def create_my_monitorings_keyboard(monitorings: list) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Å–ø–∏—Å–∫–∞ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤"""
    keyboard_buttons = []

    for monitoring in monitorings:
        if monitoring.status == "active":
            keyboard_buttons.append([
                InlineKeyboardButton(
                    text=f"üóëÔ∏è –£–¥–∞–ª–∏—Ç—å #{monitoring.id}",
                    callback_data=f"delete_monitoring_{monitoring.id}"
                )
            ])

    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –∫–Ω–æ–ø–∫—É –∫–∞–±–∏–Ω–µ—Ç–∞ (—É–±–∏—Ä–∞–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞)
    keyboard_buttons.append([
        InlineKeyboardButton(text="üìä –ö–∞–±–∏–Ω–µ—Ç", callback_data="cabinet_info")
    ])

    return InlineKeyboardMarkup(inline_keyboard=keyboard_buttons)


def create_no_monitorings_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –∫–æ–≥–¥–∞ –Ω–µ—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–≤"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –ú–æ–π –∫–∞–±–∏–Ω–µ—Ç",
                              callback_data="cabinet_info")]
    ])


def create_monitoring_success_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –ú–æ–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∏",
                              callback_data="my_monitorings")],
        [InlineKeyboardButton(text="üìä –ö–∞–±–∏–Ω–µ—Ç", callback_data="cabinet_info")]
    ])


def create_slot_notification_keyboard(monitoring_id: int, slot_date: str = None, warehouse_id: int = None) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –Ω–∞–π–¥–µ–Ω–Ω–æ–º —Å–ª–æ—Ç–µ (–∞–≤—Ç–æ–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏)"""
    keyboard = [
        [InlineKeyboardButton(text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥",
                              callback_data=f"edit_monitoring_{monitoring_id}")],
        [InlineKeyboardButton(text="üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥",
                              callback_data=f"delete_monitoring_{monitoring_id}")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def create_warehouse_error_keyboard() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø—Ä–∏ –æ—à–∏–±–∫–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Å–∫–ª–∞–¥–æ–≤"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üè™ –û–±–Ω–æ–≤–∏—Ç—å —Å–∫–ª–∞–¥—ã",
                              callback_data="update_warehouses")],
        [InlineKeyboardButton(text="üìä –ö–∞–±–∏–Ω–µ—Ç", callback_data="cabinet_info")]
    ])


def create_delete_confirmation_keyboard(monitoring_id: int) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="üìä –ú–æ–∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∏",
                              callback_data="my_monitorings")],
        [InlineKeyboardButton(text="üìä –ö–∞–±–∏–Ω–µ—Ç", callback_data="cabinet_info")]
    ])
