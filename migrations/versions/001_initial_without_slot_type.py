"""Initial migration without slot_type

Revision ID: 001
Revises: 
Create Date: 2025-01-30 16:00:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('telegram_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=255), nullable=True),
    sa.Column('first_name', sa.String(length=255), nullable=True),
    sa.Column('last_name', sa.String(length=255), nullable=True),
    sa.Column('encrypted_wb_token', sa.Text(), nullable=True),
    sa.Column('wb_token_created_at', sa.DateTime(), nullable=True),
    sa.Column('wb_token_last_used_at', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_telegram_id'), 'users', ['telegram_id'], unique=True)
    
    op.create_table('warehouses',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('wb_warehouse_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('address', sa.Text(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('accepts_fbs', sa.Boolean(), nullable=True),
    sa.Column('accepts_fbo', sa.Boolean(), nullable=True),
    sa.Column('warehouse_info', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('wb_warehouse_id')
    )
    op.create_index(op.f('ix_warehouses_id'), 'warehouses', ['id'], unique=False)
    op.create_index(op.f('ix_warehouses_wb_warehouse_id'), 'warehouses', ['wb_warehouse_id'], unique=True)
    
    op.create_table('slot_monitoring',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('coefficient_min', sa.Float(), nullable=False),
    sa.Column('coefficient_max', sa.Float(), nullable=False),
    sa.Column('acceptance_options', sa.JSON(), nullable=True),
    sa.Column('warehouse_ids', sa.JSON(), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=False),
    sa.Column('date_from', sa.DateTime(), nullable=True),
    sa.Column('date_to', sa.DateTime(), nullable=True),
    sa.Column('slots_found', sa.Integer(), nullable=True),
    sa.Column('last_check_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_slot_monitoring_id'), 'slot_monitoring', ['id'], unique=False)
    op.create_index(op.f('ix_slot_monitoring_user_id'), 'slot_monitoring', ['user_id'], unique=False)
    
    op.create_table('found_slots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('monitoring_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_id', sa.Integer(), nullable=False),
    sa.Column('warehouse_name', sa.String(length=255), nullable=False),
    sa.Column('slot_date', sa.DateTime(), nullable=False),
    sa.Column('slot_time', sa.String(length=10), nullable=False),
    sa.Column('coefficient', sa.Float(), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=True),
    sa.Column('is_notified', sa.Boolean(), nullable=True),
    sa.Column('is_booked', sa.Boolean(), nullable=True),
    sa.Column('slot_info', sa.JSON(), nullable=True),
    sa.Column('found_at', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=True),
    sa.Column('notified_at', sa.DateTime(), nullable=True),
    sa.Column('booked_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['monitoring_id'], ['slot_monitoring.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_found_slots_id'), 'found_slots', ['id'], unique=False)
    op.create_index(op.f('ix_found_slots_monitoring_id'), 'found_slots', ['monitoring_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_found_slots_monitoring_id'), table_name='found_slots')
    op.drop_index(op.f('ix_found_slots_id'), table_name='found_slots')
    op.drop_table('found_slots')
    op.drop_index(op.f('ix_slot_monitoring_user_id'), table_name='slot_monitoring')
    op.drop_index(op.f('ix_slot_monitoring_id'), table_name='slot_monitoring')
    op.drop_table('slot_monitoring')
    op.drop_index(op.f('ix_warehouses_wb_warehouse_id'), table_name='warehouses')
    op.drop_index(op.f('ix_warehouses_id'), table_name='warehouses')
    op.drop_table('warehouses')
    op.drop_index(op.f('ix_users_telegram_id'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
